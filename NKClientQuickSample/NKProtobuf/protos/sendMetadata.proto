syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package VAMetaService;
/*
    va metadata streaming service
*/
service VAMetaService {
    rpc GetVAMetaStream (google.protobuf.Empty) returns (stream FrameMetaData); 
    rpc GetRoiInfo (AreaList) returns (AreaList);
}

/*
    detected meta in frame
*/
message FrameMetaData {
    string channel_id = 1;                   // 채널 ID
    google.protobuf.Timestamp timestamp = 2; // 발생 시간
    int32 image_width = 3;
    int32 image_height = 4;
    repeated EventInfo event_list = 5;       // 이벤트 검출 리스트
    repeated Segmetation object_list = 6;    // 객체 검출 
}

/* 
    raised event info
*/
message EventInfo {
    int32 id = 1;                          // 객체 ID
    State state = 2;                       // 객체 상태
    EventType event_type = 3;              // 검출 정보
    Segmetation segmentation = 4;          // 검출 정보

    /*
    관심 영역 발생 내역
    */
    message TraceResult {
        /*
            관심 영역 정보
        */
        message RoiResult {
            string roi_id = 1;
            string roi_name = 2;
            /*
                관심 영역 라인 정보 (IN, OUT)
            */
            message LineResult {
                int32 line_id = 1;
                string line_name = 2;
            }
            LineResult alram_line = 3;
        }
        RoiResult alram_roi = 1;

        /*
            영역 연계 정보
        */
        message LinkResult {
            string link_id = 1;
            string link_name = 2;
        }
        LinkResult alram_link = 2;
        int32 alram_timestamp = 3;
    }
    repeated TraceResult alram_trace = 5;  // ROI 내역

    message JpegImageInfo
    {
        string base64_image = 1;           // 검출 객체 이미지 (jpeg image --> base64 encoding)
        BoundingBox object_box = 2;
        int32 image_width = 3;
        int32 image_height = 4;
    }
    JpegImageInfo jpeg_image = 6;
    EventParameter EventParam = 7;
    message EventParameter {
        repeated string parameters = 1;
    }
    // parameters 정의
    //얼굴 매칭 : 0 (db_id), 1(등록 썸네일?)
    //얼굴 나이 : 0 (age)
}
/*
    프레임 내 검출 결과 정보
*/
message Segmetation {
    ObjectType label = 1;         // 객체 종류 (enum ObjectType 참고)
    BoundingBox box = 2;          // 객체 검출 박스 좌표
    double confidence = 3;        // 검출 정확도 (0 ~1)
}

/*
    검출 객체 정보
    좌표 기준 : 영상 비율 기준 정규화 (0 ~ 1)
*/
message BoundingBox {
    double x = 1;      //객체 박스 x좌표
    double y = 2;      //객체 박스 y좌표
    double width = 3;  //객체 박스 너비
    double height = 4; //객체 박스 높이
}

/* message roi */
message AreaList
{
    string channelId =1;
    google.protobuf.Timestamp timestamp = 2; // 발생 시간

    /*
        Area Info
    */
    message AreaInfo
    {
       string roiId = 1;
       int32 event_type = 2;
       string event_desc = 3;
       repeated int32 class_ids = 4;
       repeated Dot dots = 5;
    }
    repeated AreaInfo area_list = 3;

}

message Dot {
   double x = 1;
   double y = 2;
}
/*
    객체 종류
*/
enum ObjectType
{
    PERSON = 0;                   // 사람
    BIKE = 1;                     // 자전거
    CAR = 2;                      // 승용차
    MOTORCYCLE = 3;               // 오토바이
    BUS = 4;                      // 버스
    TRUCK = 5;                    // 트럭
    EXCAVATOR = 6;                // 굴착기
    TANKTRUCK = 7;                // 탱크트럭
    FORKLIFT = 8;                 // 지게차
    LEMICON = 9;                  // 레미콘
    CULTIVATOR = 10;              // 경운기
    TRACTOR = 11;                 // 트랙터
    FLAME = 50;                   // 불꽃
    SMOKE = 51;                   // 연기}
    FACE_MAN = 200;               // 얼굴_남자
    FACE_WOMAN = 201;             // 얼굴_여자/*
}
/*
    이벤트 종류
*/
enum EventType
{   
    Longstay = 0;                 // 체류
    Loitering = 1;                // 배회
    Intrusion = 2;                // 침입
    Falldown = 3;                 // 쓰러짐
    PeopleCounting = 8;           // 영역 내 사람 수 카운팅
    AbnormalCongestion = 10;      // 객체 혼잡도
    AbnormalObjectCount = 11;     // 영역 내 객체 과밀집
    RoiCount = 12;                // 영역 진입 누적 카운트
    LineCount = 13;               // 라인 통과 누적 카운트
    IllegalParking = 14;          // 불법 주정차
    WrongWay = 15;                // 역 방향 카운트
    DirectionCount = 16;          // 방향성 이동 카운트 (좌, 우, 유턴 등)
    PeopleCongestionLevel = 17;   // 사람 혼잡도 레벨
    VehicleSpeed = 18;            // 차량 속도
    StopVehicleCount = 20;        // 정차 중인 차량 수 카운트
    Flame = 50;                   // 화재
    MatchingFace = 200;           // 등록 얼굴 매칭
    MaskedFace = 201;             // 얼굴 마스크 착용
}

/*
    이벤트 발생 상태값
*/
enum State
{
    START = 0;      //시작
    CONTINUE = 1;   //진행
    END = 2;        //종료
}